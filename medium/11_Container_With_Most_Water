# Problem: 11. Container With Most Water
# Level: Medium
# Tags: Two Pointers, Greedy
# Link: https://leetcode.com/problems/container-with-most-water/

from typing import List

class Solution:
    def maxArea(self, height: List[int]) -> int:
        left, right = 0, len(height) - 1
        max_area = 0

        while left < right:
            h = min(height[left], height[right])
            w = right - left
            max_area = max(max_area, h * w)

            # Kısa olanı hareket ettir (daha büyük bir yükseklik arıyoruz)
            if height[left] < height[right]:
                left += 1
            else:
                right -= 1

        return max_area
